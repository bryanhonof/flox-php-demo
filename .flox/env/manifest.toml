#
# This is a Flox environment manifest.
# Visit flox.dev/docs/concepts/manifest/
# or see flox-edit(1), manifest.toml(5) for more information.
#
version = 1

# List packages you wish to install in your environment inside
# the `[install]` section.
[install]
php.pkg-path = "php"
php.pkg-group = "php"
php.version = "with-extensions-8.2.21"
composer.pkg-path = "php82Packages.composer"
composer.pkg-group = "php"
nodejs.pkg-path = "nodejs"
nodejs.pkg-group = "php"
process-compose.pkg-path = "process-compose"
caddy.pkg-path = "caddy"

# Set environment variables in the `[vars]` section. These variables may not
# reference one another, and are added to the environment without first
# expanding them. They are available for use in the `[profile]` and `[hook]`
# scripts.
[vars]
# message = "Howdy"
DB_CONNECTION_STRING = "pg://bla"

[services.artisan-serve]
command = "( pushd example-app ; php artisan serve 2>&1 )"

[services.caddy]
command = "( caddy run --config ./Caddyfile )"

# The `hook.on-activate` script is run by the *bash* shell immediately upon
# activating an environment, and will not be invoked if Flox detects that the
# environment has previously been activated. Variables set by the script will
# be inherited by `[profile]` scripts defined below. Note that any stdout
# generated by the script will be redirected to stderr.
[hook]
on-activate = '''
'''

# Scripts defined in the `[profile]` section are *sourced* by *your shell* and
# inherit environment variables set in the `[vars]` section and by `[hook]` scripts.
# The `profile.common` script is sourced by all shells and special care should be
# taken to ensure compatibility with all shells, after which exactly one of
# `profile.{bash,fish,tcsh,zsh}` is sourced by the corresponding shell.
[profile]
common = '''
  alias process-compose="process-compose -u "$_FLOX_SERVICES_SOCKET""

  function services_stop_all() {
    process-compose down
  }
  export -f services_stop > /dev/null

  function services_list() {
    process-compose process list
  }
  export -f services_list > /dev/null

  function services_logs() {
    process-compose process logs "$1"
  }
  export -f services_logs > /dev/null
'''

# Additional options can be set in the `[options]` section. Refer to
# manifest.toml(5) for a list of available options.
[options]
systems = ["aarch64-darwin", "aarch64-linux", "x86_64-darwin", "x86_64-linux"]
# Uncomment to disable CUDA detection.
# cuda-detection = false
